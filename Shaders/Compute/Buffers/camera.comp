layout(std430, binding = 2) buffer CameraBuffer
{
    Transform transform;
    vec3 viewParams;
    uint frameCounter;
} Camera;

layout(std430, binding = 3) buffer PrevCameraBuffer
{
    Transform transform;
    vec3 viewParams;
    uint frameCounter;
} PrevCamera;

Ray CreateCameraRayFromUV(vec2 uv)
{
    vec3 localPoint = vec3(uv - 0.5, 1) * Camera.viewParams;
    vec3 viewPoint = (Camera.transform.localToWorld * vec4(localPoint, 1.0)).xyz;

    vec3 origin = Position(Camera.transform.localToWorld);
    return CreateRay(
        Position(Camera.transform.localToWorld), 
        normalize(viewPoint - origin)
    );
}

vec2 RayToPrevUV(Ray ray)
{
    vec3 lookDirection = Forward(PrevCamera.transform.localToWorld);
    float dst = PrevCamera.viewParams.z / dot(ray.direction, lookDirection);

    vec4 worldPoint = vec4(ray.origin + dst * ray.direction, 1);
    vec4 localPoint = PrevCamera.transform.worldToLocal * worldPoint;
    
    return (localPoint.xyz / PrevCamera.viewParams).xy + 0.5;
}