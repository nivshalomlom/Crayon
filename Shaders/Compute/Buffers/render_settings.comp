// TODO: create buffer
const vec3 skyColor = vec3(0.529, 0.808, 0.922);
const vec3 zenithColor = vec3(0.270, 0.470, 0.611);
const vec3 groundColor = vec3(0.3);

const vec3 sunlightDirection = vec3(-0.5, -1.0, 0.0);
const float sunItensity = 5;
const float sunFocus = 10;

const uint raysPerPixel = 8;
const uint rayBounces = 10;
const uint numSpatialNeighbors = 30;

vec3 EnvironmentLight(vec3 direction)
{
    float skyGradientT = pow(smoothstep(0.0, 0.4, direction.y), 0.35);
    vec3 skyGradient = mix(skyColor, zenithColor, skyGradientT);
    float sun = pow(max(0, dot(direction, -sunlightDirection)), sunFocus) * sunItensity;

    float groundToSkyT = smoothstep(-0.01, 0.0, direction.y);
    float sunMask = groundToSkyT >= 1.0 ? sun : 0.0;
    return mix(groundColor, skyGradient, groundToSkyT) + sunMask;
}