float RandomValue(inout uint state)
{
    state = state * 747796405 + 2891336453;
    uint result = ((state >> ((state >> 28) + 4)) ^ state) * 277803737;
    result = (result >> 22) ^ result;
    return result / 4294967295.0;
}

vec2 RandomVector2(inout uint state)
{
    return vec2(
        RandomValue(state),
        RandomValue(state)
    );
}

float RandomValueNormalDistribution(inout uint state)
{
    float theta = 2 * M_PI * RandomValue(state);
    float rho = sqrt(-2 * log(RandomValue(state)));
    return rho * cos(theta);
}

vec3 RandomDirection(inout uint state)
{
    float x = RandomValueNormalDistribution(state);
    float y = RandomValueNormalDistribution(state);
    float z = RandomValueNormalDistribution(state);
    return normalize(vec3(x, y, z));
}

float RandomDirectionPDF(vec3 direction, vec3 normal)
{
    return dot(direction, normal) / M_PI;
}