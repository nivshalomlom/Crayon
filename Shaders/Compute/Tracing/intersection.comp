#include "./hitinfo.comp"

bool Intersects(Ray ray, Sphere sphere, out HitInfo info)
{
    mat4 transform = sphere.geometry.transform;
    Ray localRay = transformRayToLocal(ray, transform);

    vec3 center = getPosition(transform);
    vec3 rayToSphere = ray.origin - center;

    float a = dot(ray.direction, ray.direction);
    float b = 2 * dot(ray.direction, rayToSphere);
    float c = dot(rayToSphere, rayToSphere) - pow(sphere.radius, 2);

    float discriminant = pow(b, 2) - 4 * a * c;
    if (discriminant < 0)
        return false;

    float t = -b / 2 * a;
    if (discriminant > 0)
    {
        float root = sqrt(discriminant);
        float t1 = (-b + root) / 2 * a;
        float t2 = (-b - root) / 2 * a;

        if (t1 > 0 && t2 > 0)
            t = min(t1, t2);
        else
            t = max(t1, t2);
    }

    if (t < 0)
        return false;

    vec3 position = ray.origin + t * ray.direction;
    vec3 normal = normalize(position - center);
    info = createHitInfo(sphere.geometry, position, normal);

    return true;
}