#version 430 core

#include "./Rays/ray_intersections.comp"

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;
layout(rgba32F, binding = 0) uniform image2D renderTarget;

void main()
{
    ivec2 dimensions = imageSize(renderTarget);
    ivec2 coords = ivec2(gl_GlobalInvocationID.xy);

    if (coords.x >= dimensions.x || coords.y >= dimensions.y)
        return;

    vec2 uv = vec2(coords) / dimensions;
    Ray ray = createCameraRayFromUV(uv);
    
    Ray t_ray = transformRay(ray, spheres[0].transform.worldToLocal);
    RayHit rayHit;

    vec4 color = vec4(0.0);
    if (Intersects(spheres[0], t_ray, rayHit))
    {
        rayHit.impact = transformImpact(rayHit.impact, spheres[0].transform.localToWorld);
        color = rayHit.material.baseColor;
    }

    imageStore(renderTarget, coords, color);
}