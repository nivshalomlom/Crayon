#version 430 core

#include "./Tracing/intersection.comp"
#include "./Tracing/transform.comp"

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;
layout(rgba32F, binding = 0) uniform image2D renderTarget;

void main()
{
    ivec2 dimensions = imageSize(renderTarget);
    ivec2 coords = ivec2(gl_GlobalInvocationID.xy);

    if (coords.x >= dimensions.x || coords.y >= dimensions.y)
        return;

    vec2 uv = vec2(coords) / dimensions;
    Ray ray = createCameraRayFromUV(uv);
    
    vec4 color = vec4(0.0);
    HitInfo info;

    mat4 inv = inverse(spheres[0].geometry.localToWorld);
    ray = transformRay(ray, inv);

    if (Intersects(ray, spheres[0], info))
        color = info.geometry.material.baseColor;

    imageStore(renderTarget, coords, color);
}