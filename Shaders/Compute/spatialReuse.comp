#version 430 core

#include "./Rays/ray_intersections.comp"

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

const ivec2 offsets[8] = {
    ivec2( 1,  0),
    ivec2(-1,  0),
    ivec2( 0,  1),
    ivec2( 0, -1),
    ivec2( 1, -1),
    ivec2(-1,  1),
    ivec2(-1, -1),
    ivec2( 1,  1)
};

uniform ivec2 dimensions;
uniform int samplingDistance;

void main()
{
    ivec2 coords = ivec2(gl_GlobalInvocationID.xy);

    if (coords.x >= dimensions.x || coords.y >= dimensions.y)
        return;

    uint kernal_ID = coords.x + coords.y * dimensions.x;
    uint state = kernal_ID + Camera.frameCounter * 6647369;
    
    Reservoir reservoir = reservoirs[kernal_ID];
    barrier();

    vec3 normal = reservoir.normal_v_numItems.xyz;
    vec3 point = reservoir.point_s_totalWeight.xyz;
    float depth = reservoir.normal_s_depth.w;

    RayHit rayHit;
    for (int i = 0; i < offsets.length(); i++)
    {
        if (RandomValue(state) < 0.5)
            continue;

        ivec2 neighbor = coords + samplingDistance * offsets[i];
        uint neighbor_ID = neighbor.x + neighbor.y * dimensions.x;
        
        if (neighbor_ID >= reservoirs.length())
            continue;

        if (reservoirs[neighbor_ID].normal_v_numItems.xyz == vec3(0.0))
            continue;

        float neighborDepth = reservoirs[neighbor_ID].normal_s_depth.w;
        if (neighborDepth < 0 || abs(depth - neighborDepth) > 0.1 * depth)
            continue;

        if (dot(normal, reservoirs[neighbor_ID].normal_v_numItems.xyz) < 0.906)
            continue;

        Ray ray = CreateRay(point, reservoirs[neighbor_ID].point_v_itemWeight.xyz);
        float weight = reservoirs[neighbor_ID].point_v_itemWeight.w;
        
        if (FireRay(ray, rayHit))
            weight = 0;

        float jacobian = ComputeJacobian(reservoirs[neighbor_ID], reservoir);
        MergeReservoirs(reservoir, reservoirs[neighbor_ID], weight / max(jacobian, EPS), state);
    }

    UpdateReservoirCorrection(reservoir);
    reservoirs[kernal_ID] = reservoir;
}